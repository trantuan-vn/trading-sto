[package]
name = "trading-sto-backend"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Cloudflare Workers bindings cho Rust
worker = { version = "0.6.0" } # Sử dụng phiên bản phù hợp, 0.6.0 là ví dụ
worker-macros = { version = "0.6.0" } # Cho các macro tiện ích như #[event(fetch)]
async-trait = "0.1" # Hữu ích cho việc định nghĩa trait bất đồng bộ, ví dụ cho middleware

# Serde cho việc tuần tự hóa/giải tuần tự hóa dữ liệu JSON (được đề cập trong package.json của nguồn [1, 2])
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Cryptography (ví dụ cho JWT, hashing)
# Có thể dùng `ring` nếu cần các phép toán mật mã phức tạp và an toàn, nhưng cần kiểm tra tính tương thích WASM.
# Hoặc các crate đơn giản hơn như `sha2` và `hmac`
sha2 = "0.10"
hmac = "0.12"
jwt = { version = "0.16", default-features = false, features = ["std"] } # Cần kiểm tra kỹ tính tương thích WASM

# Thời gian cho JWT expiration (được đề cập trong .fingerprint/chrono [3])
chrono = { version = "0.4", features = ["serde"] }

# Logging và debugging
console_error_panic_hook = { version = "0.1.7", optional = true }
tracing = { version = "0.1", optional = true } # Nếu muốn sử dụng tracing (ví dụ trong examples/tracing [4])
# env_logger = "0.11" # Thường dùng cho môi trường non-WASM, nhưng có thể có biến thể cho Workers

[features]
default = ["console_error_panic_hook"]
# Nếu bạn muốn bật tracing, hãy thêm "tracing" vào default, ví dụ: default = ["console_error_panic_hook", "tracing"]

[dev-dependencies]
# Các dependencies cho phát triển và kiểm thử (ví dụ vitest trong package.json [1, 2])
# Thường không dùng trong Worker Rust trực tiếp mà qua JavaScript/TypeScript cho môi trường sandbox.
# Tuy nhiên, nếu bạn muốn test Rust logic trực tiếp, có thể thêm các test framework ở đây.
